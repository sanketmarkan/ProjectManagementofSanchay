/*
 * ConnectToDBJPanel.java
 *
 * Created on July 25, 2008, 10:15 AM
 */

package sanchay.db.gui;

import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import sanchay.GlobalProperties;
import sanchay.gui.common.JPanelDialog;
import sanchay.db.DBConnection;

/**
 *
 * @author  eklavya
 */
public class ConnectToDBJPanel extends javax.swing.JPanel implements JPanelDialog
{
    protected JFrame owner;
    protected JDialog dialog;
    
    protected DBConnection connection;
    protected String tableName;
    
    protected boolean connected;
    
    protected DefaultComboBoxModel urlComboBoxModel;
    protected DefaultComboBoxModel userComboBoxModel;
    protected DefaultComboBoxModel passwordComboBoxModel;
    protected DefaultComboBoxModel sqlComboBoxModel;

    protected DefaultComboBoxModel tablesComboBoxModel;
    
    /** Creates new form ConnectToDBJPanel */
    public ConnectToDBJPanel() {
        initComponents();

        urlComboBoxModel = new DefaultComboBoxModel();
        userComboBoxModel = new DefaultComboBoxModel();
        passwordComboBoxModel = new DefaultComboBoxModel();
        sqlComboBoxModel = new DefaultComboBoxModel();
        
        urlJComboBox.setModel(urlComboBoxModel);
        userJComboBox.setModel(userComboBoxModel);
        passwordJComboBox.setModel(passwordComboBoxModel);
        sqlJComboBox.setModel(sqlComboBoxModel);
        
        urlComboBoxModel.addElement("jdbc:derby:derbyDB;create=true");

        tablesComboBoxModel = new DefaultComboBoxModel();
        tablesJComboBox.setModel(tablesComboBoxModel);
        
        connection = new DBConnection();
    }

    public ConnectToDBJPanel(String url, String user, String pwd) {
        this();
        
        urlComboBoxModel.setSelectedItem(url);
        userComboBoxModel.setSelectedItem(user);
        passwordComboBoxModel.setSelectedItem(pwd);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topJPanel = new javax.swing.JPanel();
        urlJPanel = new javax.swing.JPanel();
        urlJLabel = new javax.swing.JLabel();
        urlJComboBox = new javax.swing.JComboBox();
        userlJPanel = new javax.swing.JPanel();
        userJLabel = new javax.swing.JLabel();
        userJComboBox = new javax.swing.JComboBox();
        passwordJPanel = new javax.swing.JPanel();
        passwordJLabel = new javax.swing.JLabel();
        passwordJComboBox = new javax.swing.JComboBox();
        centerJPanel = new javax.swing.JPanel();
        tablesJComboBox = new javax.swing.JComboBox();
        sqlJPanel = new javax.swing.JPanel();
        sqlQueryJPanel = new javax.swing.JPanel();
        sqlJLabel = new javax.swing.JLabel();
        sqlJComboBox = new javax.swing.JComboBox();
        statusJPanel = new javax.swing.JPanel();
        statusJLabel = new javax.swing.JLabel();
        bottomJPanel = new javax.swing.JPanel();
        loadJButton = new javax.swing.JButton();
        sqlJButton = new javax.swing.JButton();
        updateJButton = new javax.swing.JButton();
        okJButton = new javax.swing.JButton();
        cancelJButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        topJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Connect to a Databae"));
        topJPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 4));

        urlJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("sanchay/intl/sanchay"); // NOI18N
        urlJLabel.setText(bundle.getString("Database_URL:")); // NOI18N
        urlJLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        urlJPanel.add(urlJLabel);

        urlJComboBox.setEditable(true);
        urlJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "jdbc:derby:derbyDB;create=true" }));
        urlJComboBox.setPreferredSize(new java.awt.Dimension(250, 20));
        urlJPanel.add(urlJComboBox);

        topJPanel.add(urlJPanel);

        userlJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        userJLabel.setText(bundle.getString("User:")); // NOI18N
        userJLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        userlJPanel.add(userJLabel);

        userJComboBox.setEditable(true);
        userJComboBox.setPreferredSize(new java.awt.Dimension(250, 20));
        userlJPanel.add(userJComboBox);

        topJPanel.add(userlJPanel);

        passwordJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        passwordJLabel.setText(bundle.getString("Password:")); // NOI18N
        passwordJLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        passwordJPanel.add(passwordJLabel);

        passwordJComboBox.setEditable(true);
        passwordJComboBox.setPreferredSize(new java.awt.Dimension(250, 20));
        passwordJPanel.add(passwordJComboBox);

        topJPanel.add(passwordJPanel);

        add(topJPanel, java.awt.BorderLayout.NORTH);

        centerJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tables"));
        centerJPanel.setLayout(new java.awt.BorderLayout());

        tablesJComboBox.setEditable(true);
        centerJPanel.add(tablesJComboBox, java.awt.BorderLayout.NORTH);

        sqlJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("SQL Query"));
        sqlJPanel.setLayout(new java.awt.GridLayout(0, 1, 0, 4));

        sqlQueryJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        sqlJLabel.setText(bundle.getString("SQL_Query:")); // NOI18N
        sqlJLabel.setPreferredSize(new java.awt.Dimension(100, 14));
        sqlQueryJPanel.add(sqlJLabel);

        sqlJComboBox.setEditable(true);
        sqlJComboBox.setPreferredSize(new java.awt.Dimension(250, 20));
        sqlQueryJPanel.add(sqlJComboBox);

        sqlJPanel.add(sqlQueryJPanel);

        statusJPanel.setLayout(new java.awt.BorderLayout());

        statusJLabel.setText(bundle.getString("_")); // NOI18N
        statusJPanel.add(statusJLabel, java.awt.BorderLayout.CENTER);

        sqlJPanel.add(statusJPanel);

        centerJPanel.add(sqlJPanel, java.awt.BorderLayout.SOUTH);

        add(centerJPanel, java.awt.BorderLayout.CENTER);

        bottomJPanel.setLayout(new java.awt.GridLayout(1, 0, 4, 0));

        loadJButton.setText(bundle.getString("Load")); // NOI18N
        loadJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadJButtonActionPerformed(evt);
            }
        });
        bottomJPanel.add(loadJButton);

        sqlJButton.setText(bundle.getString("Execute_SQL")); // NOI18N
        sqlJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqlJButtonActionPerformed(evt);
            }
        });
        bottomJPanel.add(sqlJButton);

        updateJButton.setText(bundle.getString("Update_SQL")); // NOI18N
        updateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateJButtonActionPerformed(evt);
            }
        });
        bottomJPanel.add(updateJButton);

        okJButton.setLabel(bundle.getString("OK")); // NOI18N
        okJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okJButtonActionPerformed(evt);
            }
        });
        bottomJPanel.add(okJButton);

        cancelJButton.setLabel(bundle.getString("Cancel")); // NOI18N
        cancelJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelJButtonActionPerformed(evt);
            }
        });
        bottomJPanel.add(cancelJButton);

        add(bottomJPanel, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void updateJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateJButtonActionPerformed
// TODO add your handling code here:
        if(connected == false)
            return;
        
        String query = (String) sqlJComboBox.getSelectedItem();
        
        try {
            connection.executeUpdate(query);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }        
    }//GEN-LAST:event_updateJButtonActionPerformed

    private void sqlJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqlJButtonActionPerformed
// TODO add your handling code here:
        if(connected == false)
            return;
        
        String query = (String) sqlJComboBox.getSelectedItem();
        
        try {
            connection.executeQuery(query);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_sqlJButtonActionPerformed

    private void loadJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadJButtonActionPerformed
// TODO add your handling code here:
        connection.setURL((String) urlJComboBox.getSelectedItem());
        connection.setUser((String) userJComboBox.getSelectedItem());
        connection.setPassword((String) passwordJComboBox.getSelectedItem());
        
        connection.connect();
        
        statusJLabel.setText(GlobalProperties.getIntlString("Connected_to_the_database."));
        
        
//        ResultSet resultSet = null;
//        
//        try {            
////            resultSet = connection.executeQuery("select count(*) from sys.systables");
//            int count = connection.executeUpdate("CREATE TABLE HY_Address (ID INT, StreetName VARCHAR(20)," + " City VARCHAR(20))");
//            
//            if (count > 0)
//                statusJLabel.setText(statusJLabel.getText() + " Table created.");
                

//            ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
//            
//            int count = resultSetMetaData.getColumnCount();
//            
//            for (int i = 0; i < count; i++)
//            {
//                String cname = resultSetMetaData.getColumnName(i);
//                tablesListModel.addElement(cname);
//            }
            
//            while (resultSet.next())
//            {
//                tablesListModel.addElement();
//                tablesListModel.addElement(resultSet.getString("COLUMN_NAME"));
//            }
            
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//        }
        
        tableName = (String) tablesJComboBox.getSelectedItem();
        
        connected = true;        
    }//GEN-LAST:event_loadJButtonActionPerformed

    private void cancelJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelJButtonActionPerformed
// TODO add your handling code here:
        connected = false;
        setVisible(false);
    }//GEN-LAST:event_cancelJButtonActionPerformed

    private void okJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okJButtonActionPerformed
// TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_okJButtonActionPerformed
   
    public boolean isConnected()
    {
        return connected;
    }    
   
    public DBConnection getConnection()
    {
        return connection;
    }    
   
    public String getTableName()
    {
        return tableName;
    }    
    
    public void setInfo(String url, String user, String pwd)
    {
        urlComboBoxModel.setSelectedItem(url);
        userComboBoxModel.setSelectedItem(user);
        passwordComboBoxModel.setSelectedItem(pwd);        
    }
    
    public void setDialog(JDialog dialog) {
	this.dialog = dialog;
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomJPanel;
    private javax.swing.JButton cancelJButton;
    private javax.swing.JPanel centerJPanel;
    private javax.swing.JButton loadJButton;
    private javax.swing.JButton okJButton;
    private javax.swing.JComboBox passwordJComboBox;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JPanel passwordJPanel;
    private javax.swing.JButton sqlJButton;
    private javax.swing.JComboBox sqlJComboBox;
    private javax.swing.JLabel sqlJLabel;
    private javax.swing.JPanel sqlJPanel;
    private javax.swing.JPanel sqlQueryJPanel;
    private javax.swing.JLabel statusJLabel;
    private javax.swing.JPanel statusJPanel;
    private javax.swing.JComboBox tablesJComboBox;
    private javax.swing.JPanel topJPanel;
    private javax.swing.JButton updateJButton;
    private javax.swing.JComboBox urlJComboBox;
    private javax.swing.JLabel urlJLabel;
    private javax.swing.JPanel urlJPanel;
    private javax.swing.JComboBox userJComboBox;
    private javax.swing.JLabel userJLabel;
    private javax.swing.JPanel userlJPanel;
    // End of variables declaration//GEN-END:variables
    
}
